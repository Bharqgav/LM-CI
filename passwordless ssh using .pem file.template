{
"Parameters":{

    "InstanceType" : {
        "Description" : "Instances type for forming cluster",
        "Type" : "String",
        "Default" : "t2.micro"
    },
    "KeyName" : {
        "Description" : "Private keyname for the Instances",
        "Type" : "String",
        "Default" : "KTLM"
    },
    "AMI": {
      "Description": "The number of Intelligence Server nodes to build",
      "Type": "String",
      "Default": "ami-4fffc834"
    }
   
},

"Resources" : {

   	"IAMRootRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
            "AssumeRolePolicyDocument": {
                "Version" : "2012-10-17",
                "Statement": [ {
                   "Effect": "Allow",
                    "Principal": {
                     	"Service": [ "ec2.amazonaws.com" ]
                  },
                  	"Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
            "Policies": [ {
                "PolicyName": "root",
                "PolicyDocument": {
                  	"Version" : "2012-10-17",
                  	"Statement": [ {
                     	"Effect": "Allow",
                     	"Action": "s3:*",
                     	"Resource": "*"
                  } ]
               }
               } ]
            }
      },

    "IAMinstpro": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
            "Path": "/",
            "Roles": [ {
              	"Ref": "IAMRootRole"
            } ]
        }
    },
    

	"LMCIserver1":{
		"Type":"AWS::EC2::Instance",
		"Properties":{	
			"ImageId": {"Ref" : "AMI"},
			"KeyName": {"Ref" : "KeyName"},
			"IamInstanceProfile" : {"Ref" : "IAMinstpro"},
			"Tags": [
                  {"Key": "Name","Value":"LMCI-server1"}, 
                  {"Key": "Project","Value":"LM-CI"},
                  {"Key": "Email", "Value": "saisatyabhargav.pothula@quantiphi.com"},
                  {"Key": "username", "Value": "bhargavpss"}
              ],
			"InstanceType" : { "Ref" : "InstanceType"},
			
			"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash -v\n",        
            "#sudo chmod 777 /home/ec2-user/.ssh/ \n",
            "/opt/aws/bin/cfn-signal -e 0 '", { "Ref": "WaitHandle"}, "'\n"

            ]]}
            }
				
			}},
				    
	
"LMCIserver2":{
    "Type":"AWS::EC2::Instance",
    "Properties":{
      "ImageId": {"Ref" : "AMI"},
      "KeyName": {"Ref" : "KeyName"},
      "IamInstanceProfile" : {"Ref" : "IAMinstpro"},
      "Tags": [
                  {"Key": "Name","Value":"LMCI-server2"}, 
                  {"Key": "Project","Value":"LM-CI"},
                  {"Key": "Email", "Value": "saisatyabhargav.pothula@quantiphi.com"},
                  {"Key": "username", "Value": "bhargavpss"}
              ],
      "InstanceType" : { "Ref" : "InstanceType"},
      "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "#sudo chmod 777 /home/ec2-user/.ssh/ \n",
          "/opt/aws/bin/cfn-signal -e 0 '", { "Ref": "WaitHandle"}, "'\n"

      ] ] }
      }}},

  "WaitHandle" : {
  "Type" : "AWS::CloudFormation::WaitConditionHandle"
  },

  "WaitCondition" : {
     "Type" : "AWS::CloudFormation::WaitCondition",
     "DependsOn" : ["LMCIserver1","LMCIserver2"],
     "Properties" : {
     "Handle"  : { "Ref" : "WaitHandle" },
     "Timeout" : "500"     
    }
  },
     
	"LMCIAnsiblenode":{
		"Type":"AWS::EC2::Instance",
    "DependsOn" : "WaitCondition",
    
		"Properties":{
			"ImageId": {"Ref" : "AMI"},
			"KeyName": {"Ref" : "KeyName"},
			
			"IamInstanceProfile" : {"Ref" : "IAMinstpro"},
			"Tags": [
                  {"Key": "Name","Value":"LMCI-Ansible-node"}, 
                  {"Key": "Project","Value":"LM-CI"},
                  {"Key": "Email", "Value": "saisatyabhargav.pothula@quantiphi.com"},
                  {"Key": "username", "Value": "bhargavpss"}
              ],
			"InstanceType" : { "Ref" : "InstanceType"},
			"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash -v\n",
          "exec &> /var/log/userdata.log\n",
          "su ec2-user -c \"ssh-keygen -f /home/ec2-user/.ssh/id_rsa -t rsa -N ''\"\n",
          "wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm \n",
          "sudo rpm -ivh epel-release-6-8.noarch.rpm \n",
          "sudo yum --enablerepo=epel install -y ansible \n",

          "aws s3 cp s3://lm-training-bhargav/KTLM.pem /tmp/ \n",
          "chmod 400 /tmp/KTLM.pem \n",
          "#sleep 300 \n",
					"scp -o StrictHostKeyChecking=no -i /tmp/KTLM.pem /home/ec2-user/.ssh/id_rsa.pub ec2-user@", { "Fn::GetAtt" : [ "LMCIserver1", "PublicDnsName" ] }, ":/tmp/","\n",
          "ssh -o StrictHostKeyChecking=no -i /tmp/KTLM.pem ec2-user@", { "Fn::GetAtt" : [ "LMCIserver1", "PublicDnsName" ] }," ", "'sudo cat /tmp/id_rsa.pub >> /home/ec2-user/.ssh/authorized_keys'","\n",
          "#ssh -o StrictHostKeyChecking=no -i /tmp/KTLM.pem ec2-user@", { "Fn::GetAtt" : [ "LMCIserver1", "PublicDnsName" ] }," ", "sudo chmod 600 /home/ec2-user/.ssh/","\n",

          "scp -o StrictHostKeyChecking=no -i /tmp/KTLM.pem /home/ec2-user/.ssh/id_rsa.pub ec2-user@", { "Fn::GetAtt" : [ "LMCIserver2", "PublicDnsName" ] }, ":/tmp/","\n",
          "ssh -o StrictHostKeyChecking=no -i /tmp/KTLM.pem ec2-user@", { "Fn::GetAtt" : [ "LMCIserver2", "PublicDnsName" ] }," ", "'sudo cat /tmp/id_rsa.pub >> /home/ec2-user/.ssh/authorized_keys'","\n",
          "#ssh -o StrictHostKeyChecking=no -i /tmp/KTLM.pem ec2-user@", { "Fn::GetAtt" : [ "LMCIserver2", "PublicDnsName" ] }," ", "sudo chmod 600 /home/ec2-user/.ssh/","\n",
          
          "mkdir /etc/ansible/playbooks \n",
          "#sudo wget -P /etc/ansible/playbooks/ "
			] ] 
      }  
    }}

      }
  }     
}       
 
